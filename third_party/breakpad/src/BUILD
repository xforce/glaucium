package(default_visibility = ["//visibility:public"])

licenses(["notice"])

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
)

cc_inc_library(
    name = "common_inc",
    hdrs = glob(["common/*.h"]),
    prefix = "common",
    deps = [":common"],
)

cc_library(
    name = "google_breakpad",
    hdrs = glob(["**/*.h"]),
    includes = ["."],
)

cc_library(
    name = "libdisasm",
    srcs = [
        "third_party/libdisasm/ia32_implicit.c",
        "third_party/libdisasm/ia32_implicit.h",
        "third_party/libdisasm/ia32_insn.c",
        "third_party/libdisasm/ia32_insn.h",
        "third_party/libdisasm/ia32_invariant.c",
        "third_party/libdisasm/ia32_invariant.h",
        "third_party/libdisasm/ia32_modrm.c",
        "third_party/libdisasm/ia32_modrm.h",
        "third_party/libdisasm/ia32_opcode_tables.c",
        "third_party/libdisasm/ia32_opcode_tables.h",
        "third_party/libdisasm/ia32_operand.c",
        "third_party/libdisasm/ia32_operand.h",
        "third_party/libdisasm/ia32_reg.c",
        "third_party/libdisasm/ia32_reg.h",
        "third_party/libdisasm/ia32_settings.c",
        "third_party/libdisasm/ia32_settings.h",
        "third_party/libdisasm/libdis.h",
        "third_party/libdisasm/qword.h",
        "third_party/libdisasm/x86_disasm.c",
        "third_party/libdisasm/x86_format.c",
        "third_party/libdisasm/x86_imm.c",
        "third_party/libdisasm/x86_imm.h",
        "third_party/libdisasm/x86_insn.c",
        "third_party/libdisasm/x86_misc.c",
        "third_party/libdisasm/x86_operand_list.c",
        "third_party/libdisasm/x86_operand_list.h",
    ],
    defines = ["HAVE_A_OUT_H"],
    includes = [
        ".",
        "third_party/libdisasm",
    ],
    linkstatic = 1,
)

cc_library(
    name = "processor",
    srcs = [
        "processor/address_map.h",
        "processor/address_map-inl.h",
        "processor/basic_code_module.h",
        "processor/basic_code_modules.cc",
        "processor/basic_code_modules.h",
        "processor/basic_source_line_resolver.cc",
        "processor/basic_source_line_resolver_types.h",
        "processor/call_stack.cc",
        "processor/cfi_frame_info.cc",
        "processor/cfi_frame_info.h",
        "processor/cfi_frame_info-inl.h",
        "processor/contained_range_map.h",
        "processor/contained_range_map-inl.h",
        "processor/disassembler_x86.cc",
        "processor/disassembler_x86.h",
        "processor/dump_context.cc",
        "processor/dump_object.cc",
        "processor/exploitability.cc",
        "processor/exploitability_linux.cc",
        "processor/exploitability_linux.h",
        "processor/exploitability_win.cc",
        "processor/exploitability_win.h",
        "processor/fast_source_line_resolver.cc",
        "processor/fast_source_line_resolver_types.h",
        "processor/linked_ptr.h",
        "processor/logging.cc",
        "processor/logging.h",
        "processor/map_serializers.h",
        "processor/map_serializers-inl.h",
        "processor/microdump_processor.cc",
        "processor/minidump.cc",
        "processor/minidump_processor.cc",
        "processor/module_comparer.cc",
        "processor/module_comparer.h",
        "processor/module_factory.h",
        "processor/module_serializer.cc",
        "processor/module_serializer.h",
        "processor/pathname_stripper.cc",
        "processor/pathname_stripper.h",
        "processor/postfix_evaluator.h",
        "processor/postfix_evaluator-inl.h",
        "processor/proc_maps_linux.cc",
        "processor/process_state.cc",
        "processor/range_map.h",
        "processor/range_map-inl.h",
        "processor/simple_serializer.h",
        "processor/simple_serializer-inl.h",
        "processor/simple_symbol_supplier.cc",
        "processor/simple_symbol_supplier.h",
        "processor/source_line_resolver_base.cc",
        "processor/source_line_resolver_base_types.h",
        "processor/stack_frame_cpu.cc",
        "processor/stack_frame_symbolizer.cc",
        "processor/stackwalk_common.cc",
        "processor/stackwalk_common.h",
        "processor/stackwalker.cc",
        "processor/stackwalker_address_list.cc",
        "processor/stackwalker_address_list.h",
        "processor/stackwalker_amd64.cc",
        "processor/stackwalker_amd64.h",
        "processor/stackwalker_arm.cc",
        "processor/stackwalker_arm.h",
        "processor/stackwalker_arm64.cc",
        "processor/stackwalker_arm64.h",
        "processor/stackwalker_mips.cc",
        "processor/stackwalker_mips.h",
        "processor/stackwalker_ppc.cc",
        "processor/stackwalker_ppc.h",
        "processor/stackwalker_ppc64.cc",
        "processor/stackwalker_ppc64.h",
        "processor/stackwalker_selftest.cc",
        "processor/stackwalker_sparc.cc",
        "processor/stackwalker_sparc.h",
        "processor/stackwalker_x86.cc",
        "processor/stackwalker_x86.h",
        "processor/static_address_map.h",
        "processor/static_address_map-inl.h",
        "processor/static_contained_range_map.h",
        "processor/static_contained_range_map-inl.h",
        "processor/static_map.h",
        "processor/static_map-inl.h",
        "processor/static_map_iterator.h",
        "processor/static_map_iterator-inl.h",
        "processor/static_range_map.h",
        "processor/static_range_map-inl.h",
        "processor/symbolic_constants_win.cc",
        "processor/symbolic_constants_win.h",
        "processor/synth_minidump.cc",
        "processor/synth_minidump.h",
        "processor/tokenize.cc",
        "processor/tokenize.h",
        "processor/windows_frame_info.h",
    ],
    defines = ["HAVE_A_OUT_H"],
    includes = ["."],
    linkstatic = 1,
    deps = [
        ":common",
        ":google_breakpad",
        ":libdisasm",
    ],
)

cc_library(
    name = "common",
    srcs = [
        "common/basictypes.h",
        "common/byte_cursor.h",
        "common/convert_UTF.c",
        "common/convert_UTF.h",
        "common/dwarf/bytereader.cc",
        "common/dwarf/bytereader.h",
        "common/dwarf/bytereader-inl.h",
        "common/dwarf/cfi_assembler.cc",
        "common/dwarf/cfi_assembler.h",
        "common/dwarf/dwarf2diehandler.cc",
        "common/dwarf/dwarf2diehandler.h",
        "common/dwarf/dwarf2enums.h",
        "common/dwarf/dwarf2reader.cc",
        "common/dwarf/dwarf2reader.h",
        "common/dwarf/dwarf2reader_test_common.h",
        "common/dwarf/elf_reader.cc",
        "common/dwarf/elf_reader.h",
        "common/dwarf/functioninfo.cc",
        "common/dwarf/functioninfo.h",
        "common/dwarf/line_state_machine.h",
        "common/dwarf/types.h",
        "common/dwarf_cfi_to_module.cc",
        "common/dwarf_cfi_to_module.h",
        "common/dwarf_cu_to_module.cc",
        "common/dwarf_cu_to_module.h",
        "common/dwarf_line_to_module.cc",
        "common/dwarf_line_to_module.h",
        "common/language.cc",
        "common/language.h",
        "common/linux/crc32.cc",
        "common/linux/crc32.h",
        "common/linux/dump_symbols.cc",
        "common/linux/dump_symbols.h",
        "common/linux/eintr_wrapper.h",
        "common/linux/elf_core_dump.cc",
        "common/linux/elf_core_dump.h",
        "common/linux/elf_gnu_compat.h",
        "common/linux/elf_symbols_to_module.cc",
        "common/linux/elf_symbols_to_module.h",
        "common/linux/elfutils.cc",
        "common/linux/elfutils.h",
        "common/linux/elfutils-inl.h",
        "common/linux/file_id.cc",
        "common/linux/file_id.h",
        "common/linux/google_crashdump_uploader.cc",
        "common/linux/google_crashdump_uploader.h",
        "common/linux/guid_creator.cc",
        "common/linux/guid_creator.h",
        "common/linux/http_upload.cc",
        "common/linux/http_upload.h",
        "common/linux/ignore_ret.h",
        "common/linux/libcurl_wrapper.cc",
        "common/linux/libcurl_wrapper.h",
        "common/linux/linux_libc_support.cc",
        "common/linux/linux_libc_support.h",
        "common/linux/memory_mapped_file.cc",
        "common/linux/memory_mapped_file.h",
        "common/linux/safe_readlink.cc",
        "common/linux/safe_readlink.h",
        "common/linux/synth_elf.cc",
        "common/linux/synth_elf.h",
        "common/md5.cc",
        "common/md5.h",
        "common/memory.h",
        "common/memory_range.h",
        "common/module.cc",
        "common/module.h",
        "common/scoped_ptr.h",
        "common/simple_string_dictionary.cc",
        "common/simple_string_dictionary.h",
        "common/stabs_reader.cc",
        "common/stabs_reader.h",
        "common/stabs_to_module.cc",
        "common/stabs_to_module.h",
        "common/string_conversion.cc",
        "common/string_conversion.h",
        "common/symbol_data.h",
        "common/test_assembler.cc",
        "common/test_assembler.h",
        "common/unordered.h",
        "common/using_std_string.h",
    ],
    defines = ["HAVE_A_OUT_H"],
    includes = [
        ".",
        "common/",
    ],
    linkstatic = 1,
    deps = [
        ":google_breakpad",
    ],
)